# PRECISION should be DOUB or SING
PRECISION = SING

MAKESLICES = NOSLICES
#if MAKESLICES=SLICES then do not use C routine to write a single file, instead split all files slice by slice.  

CC = icc
CFLAGS = -D_LARGEFILE64_SOURCE  -D_FILE_OFFSET_BITS=64

FC = mpif90
FFLAGS = -I/usr/local/fftw-2.1.5-intel/include -C -g -traceback  -cpp  -D$(PRECISION) -D$(MAKESLICES) -convert big_endian

#FFLAGS = -cpp  -convert big_endian -I/usr/local/fftw-2.1.5-intel/include -D$(PRECISION)  #-O3 -ipo  -axP #-static
#FFLAGS =-Mpreprocess -I/usr/local/include -D$(PRECISION) #-O3 -ipo  -axP #-static 

ifeq ($(PRECISION),DOUB)
	LIBS =-L/usr/local/fftw-2.1.5-intel/lib -ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw -limf -lm
else
	LIBS = -L/usr/local/fftw-2.1.5-intel/lib -lsrfftw_mpi -lsfftw_mpi -lsrfftw -lsfftw -limf -lm
endif

ifeq ($(MAKESLICES),SLICES)
	OBJS = grafic_types.o common_var_ramses.o grafic_io.o transform.o cosmology.o compute_power.o
else
	OBJS = grafic_types.o parallel_io.o common_var_ramses.o grafic_io.o transform.o cosmology.o compute_power.o
endif
MODS = grafic_types.mod grafic_io.mod common_var_ramses.mod transform.mod cosmology.mod compute_power.mod


all:	powergrid

powergrid:	$(OBJS) $(MODS) powergrid.o
	$(FC)  -limf  -o $@ powergrid.o $(OBJS) $(LIBS)
clean:
	rm -rf $(OBJS) $(MODS) powergrid.o *.mod powergrid

#.f90.o:
#	$(FC) $(FFLAGS) -c $< -o $@
%.o:	%.f90
	$(FC) $(FFLAGS) -c $< -o $@

